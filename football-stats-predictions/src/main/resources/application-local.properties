spring.application.name=football-stats-predictions
integration.football.api.url=https://api.football-data.org/
integration.football.api.apikey=<COMPLETAR CON LA API KEY DE FOOTBALL-DATA>

# H2 Database Configuration

# URL de conexi n JDBC para H2.
# 'mem:testdb' crea una base de datos en memoria llamada 'testdb'. Se pierde al reiniciar.
# 'file:./data/fspdb' crea una base de datos en un archivo llamado 'fspdb.mv.db'
# en un directorio 'data' dentro del directorio ra z del proyecto. Persiste entre reinicios.
# Elige la que prefieras para desarrollo local. La opci n de archivo suele ser m s  til.
spring.datasource.url=jdbc:h2:file:./data/fspdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# Nombre de usuario para la base de datos H2 (puedes cambiarlo)
spring.datasource.username=sa

# Contrase a para la base de datos H2 (d jala vac a o pon una contrase a simple para desarrollo)
spring.datasource.password=1234

# Driver JDBC (Spring Boot generalmente lo detecta, pero es bueno ser expl cito)
spring.datasource.driverClassName=org.h2.Driver

# --- JPA / Hibernate Configuration ---

# Dialecto de Hibernate para H2 (Spring Boot generalmente lo detecta)
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Estrategia de generaci n del esquema de la base de datos:
# 'create': Borra y crea el esquema cada vez que inicia la aplicaci n.  til al principio.
# 'create-drop': Como 'create', pero borra el esquema al cerrar la aplicaci n.
# 'update': Intenta actualizar el esquema existente seg n tus entidades.  til durante el desarrollo.
# 'validate': Valida que el esquema coincida con tus entidades, pero no hace cambios.
# 'none': No hace nada con el esquema.
# Para desarrollo local, 'update' o 'create-drop' son comunes.
spring.jpa.hibernate.ddl-auto=update

# Muestra las sentencias SQL generadas por Hibernate en la consola ( til para depurar)
spring.jpa.show-sql=true

# Formatea las sentencias SQL mostradas para que sean m s legibles
spring.jpa.properties.hibernate.format_sql=true

# --- H2 Console Configuration ---

# Habilita la consola web de H2
spring.h2.console.enabled=true

# Ruta para acceder a la consola web (ej: http://localhost:8080/h2-console)
spring.h2.console.path=/h2-console

# Opcional: Deshabilita la protecci n CSRF espec ficamente para la consola H2 si usas Spring Security
# (Considera las implicaciones de seguridad si haces esto en entornos no locales)
# spring.security.csrf.ignoring-request-matchers=/h2-console/**
# spring.security.headers.frame-options.enabled=false # Necesario para que H2 Console funcione en un frame